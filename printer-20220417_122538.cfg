# This file contains common pin mappings for the Two Trees Sapphire
# Pro printer from 2020. To use this config, the firmware should be
# compiled for the STM32F103. When running "make menuconfig", enable
# "extra low-level configuration setup", select the 28KiB bootloader,
# serial (on USART3 PB11/PB10) communication, and set "GPIO pins to
# set at micro-controller startup" to "!PC6,!PD13".

# Note that the "make flash" command does not work with the Sapphire
# Pro. After running "make", run the following command:
#   ./scripts/update_mks_robin.py out/klipper.bin out/Robin_nano35.bin
# Copy the file out/Robin_nano35.bin to an SD card and then restart the
# printer with that SD card.

# See docs/Config_Reference.md for a description of parameters.

[stepper_x]
step_pin: PE3
dir_pin: !PE2
enable_pin: !PE4
microsteps: 16
rotation_distance: 40
endstop_pin: !PA15
position_endstop: -2
position_min: -2
position_max: 220
homing_speed: 50

[stepper_y]
step_pin: PE0
dir_pin: !PB9
enable_pin: !PE1
microsteps: 16
rotation_distance: 40
endstop_pin: !PA12
position_endstop: 220
position_max: 220
position_min: 0
homing_speed: 50

[stepper_z]
step_pin: PB5
dir_pin: !PB4#
enable_pin: !PB8
microsteps: 16
rotation_distance: 1
endstop_pin: probe:z_virtual_endstop
position_min: 0
#position_endstop: 0
position_max: 225


[extruder]
step_pin: PD6
dir_pin: !PD3
enable_pin: !PB3
microsteps: 16
rotation_distance: 6.720
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC3
sensor_type: EPCOS 100K B57560G104F
#ATC Semitec 104GT-2
sensor_pin: PC1
#control: pid
#pid_Kp: 14.669
#pid_Ki: 0.572
#pid_Kd: 94.068
min_temp: 0
max_temp: 280
min_extrude_temp: 200
max_extrude_cross_section: 3
max_extrude_only_distance: 300.0
max_extrude_only_velocity: 700     # максимальная скорость подачи филамента в мм/с.

#[firmware_retraction]
#retract_length: 1               #   The length of filament (in mm) to retract when G10 is activated, and to unretract when G11 is activated (but see unretract_extra_length below). The default is 0 mm.
#retract_speed: 30               #   The speed of retraction, in mm/s. The default is 20 mm/s.
#unretract_extra_length: 1      #   The length (in mm) of *additional* filament to add when unretracting.
#unretract_speed: 30             #   The speed of unretraction, in mm/s. The default is 10 mm/s.

[heater_bed]
heater_pin: PA0
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC0
control: pid
pid_Kp: 325.10
pid_Ki: 63.35
pid_Kd: 417.10
min_temp: 0
max_temp: 130

[fan]
pin: PB1

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[printer]
kinematics: corexy
max_velocity: 300
max_accel: 4500
max_z_velocity: 10
max_z_accel: 100

[static_digital_output reset_display]
pins: !PC6, !PD13


[virtual_sdcard]
path: ~/gcode_files/

[pause_resume]
#recover_velocity: 50.
#   When capture/restore is enabled, the speed at which to return to
#   the captured position (in mm/s). Default is 50.0 mm/s.

[static_digital_output reset_display]
pins: !PC6, !PD13

[display_status]

#[gcode_macro CANCEL_PRINT]
#description: Cancel the actual running print
#rename_existing: CANCEL_PRINT_BASE
#gcode:
#  TURN_OFF_HEATERS
#  CANCEL_PRINT_BASE


[servo BFPTouch]
pin: PA8
initial_angle: 50
maximum_servo_angle = 160
minimum_pulse_width = 0.0005
maximum_pulse_width = 0.0024

[probe]
pin: PA11 #using z-endstop pin
x_offset: -35
y_offset: 0
z_offset: 1.63
speed: 8.0
samples: 2
activate_gcode:
  SET_SERVO SERVO=BFPTouch ANGLE=160
  G4 P300
deactivate_gcode:
  SET_SERVO SERVO=BFPTouch ANGLE=50

[safe_z_home]
home_xy_position: 145,110 # Change coordinates to the center of your print bed
speed: 50
z_hop: 10                 # Move up 10mm
z_hop_speed: 5

[gcode_macro G29]
gcode:
    BED_MESH_CLEAR
    G28
    BED_MESH_CALIBRATE
    BED_MESH_PROFILE SAVE=name
    SAVE_CONFIG
    BED_MESH_PROFILE LOAD=name

[bed_mesh]
speed: 150
horizontal_move_z: 5
mesh_min: 10,10
mesh_max: 175,210
probe_count: 4,4

[idle_timeout]
timeout: 6000

[temperature_sensor Raspbery_PI]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[gcode_macro PID_Ex]
gcode:
	PID_CALIBRATE HEATER=extruder TARGET=250
  SAVE_CONFIG
#m303 e0 s210 c8
[gcode_macro PID_Bed]
gcode:
	PID_CALIBRATE HEATER=heater_bed TARGET=70
  SAVE_CONFIG
#m303 e0 s210 c8

#[gcode_macro G27]
#gcode:
#  {% set default_x = printer.toolhead.axis_minimum.x + 20 %}
#  {% set default_y = printer.toolhead.axis_minimum.y + 20 %}
#
#  {% if 'save_variables' in printer %}
#    {% set svv = printer.save_variables.variables %}
#    {% if 'park_x' in svv %}
#      {% set default_x = svv.park_x %}
#    {% endif %}
#    {% if 'park_y' in svv %}
#      {% set default_y = svv.park_y %}
#    {% endif %}
#  {% endif %}
#
#  {% set x = params.X|default(default_x)|float %}
#  {% set y = params.Y|default(default_y)|float %}
#  {% set z = params.Z|default(20)|float %}
#
#  {% if printer.toolhead.homed_axes != "xyz" %}
#    {action_respond_info("Please home XYZ first")}
#  {% else %}
#    SAVE_GCODE_STATE NAME=G27_state
#    G91
#    G1 Z{z}
#    G90
#    G1 X{x} Y{y} F3000
#    RESTORE_GCODE_STATE NAME=G27_state MOVE=0
#  {% endif %}

[gcode_macro M204]
rename_existing: M204.1
gcode:
  {% set f = params.F|default(0.5)|float %}

  {% if 'S' in params %}
    {% set s = params.S|float %}
    SET_VELOCITY_LIMIT ACCEL={s} ACCEL_TO_DECEL={ s * f }
  {% else %}
    {% if 'P' in params %}
      {% set p = params.P|float %}
      {% if 'T' in params %}
        {% set t = params.T|float %}
        {% if p < t %}
          SET_VELOCITY_LIMIT ACCEL={p} ACCEL_TO_DECEL={ p * f }
        {% else %}
          SET_VELOCITY_LIMIT ACCEL={t} ACCEL_TO_DECEL={ t * f }
        {% endif %}
      {% else %}
        SET_VELOCITY_LIMIT ACCEL={p} ACCEL_TO_DECEL={ p * f }
      {% endif %}
    {% elif 'T' in params %}
      {% set t = params.T|float %}
      SET_VELOCITY_LIMIT ACCEL={t} ACCEL_TO_DECEL={ t * f }
    {% endif %}
  {% endif %}

  [gcode_macro M205]
gcode:
  {% if 'X' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.X}
  {% elif 'Y' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.Y}
  {% endif %}



[gcode_macro M900]
gcode:
  {% if 'K' in params %}
    {% if 'E' in params %}
      SET_PRESSURE_ADVANCE EXTRUDER={params.E} ADVANCE={params.K}
    {% else %}
      SET_PRESSURE_ADVANCE ADVANCE={params.K}
    {% endif %}
  {% endif %}
[gcode_macro PAUSE_PARK]
gcode:
  {% set default_x = printer.toolhead.axis_minimum.x + 20 %}
  {% set default_y = printer.toolhead.axis_minimum.y + 20 %}

  {% if 'save_variables' in printer %}
    {% set svv = printer.save_variables.variables %}
    {% if 'park_x' in svv %}
      {% set default_x = svv.park_x %}
    {% endif %}
    {% if 'park_y' in svv %}
      {% set default_y = svv.park_y %}
    {% endif %}
  {% endif %}

  {% set x = params.X|default(default_x)|float %}
  {% set y = params.Y|default(default_y)|float %}
  {% set z = params.Z|default(20)|float %}
  {% set r = params.R|default(3)|float %}

  {% if printer.pause_resume.is_paused %}
    {action_respond_info("Already paused")}
  {% elif printer.toolhead.homed_axes != "xyz" %}
    {action_respond_info("Please home XYZ first")}
  {% else %}
    PAUSE
    {% if r > 0.0 %}
      RETRACT D={r}
    {% endif %}
    G27 X{x} Y{y} Z{z}
  {% endif %}


[gcode_macro POST_END]
gcode:
  CLEAR_PAUSE
  {% if 't5uid1' in printer %}
    DGUS_PRINT_END
  {% endif %}
  M220 S100
  M221 S100
  M900 K0
  {% if printer.extruder.temperature >= 170 %}
    M83
    G91
    G1 E-2 F2400
    G1 E-2 Z5 F2400
  {% endif %}
  M82
  G90
  G27
  M104 S0
  M140 S0
  M106 S0
  M84 X Y E
  SAVE_IF_SET



[gcode_macro PRE_START]
gcode:
  {% set wz = params.WZ|default(0.25)|float %}
  {% set wn = params.WN|default(0.4)|float %}
  CLEAR_PAUSE
  M106 S0
  M220 S100
  M221 S100
  M900 K0
  {% if 't5uid1' in printer %}
    DGUS_PRINT_START
  {% endif %}
  G28
  WIPE_LINE Z={wz} N={wn}



[gcode_macro RETRACT]
gcode:
  {% set f = params.F|default(600)|float %}

  {% if 'D' in params %}
    {% if printer.idle_timeout.state == "Printing" and not printer.pause_resume.is_paused %}
      {action_respond_info("This command cannot be used while printing")}
    {% elif printer.extruder.temperature < 170 %}
      {action_respond_info("Extruder temperature too low")}
    {% else %}
      SAVE_GCODE_STATE NAME=RETRACT_state
      M83
      G1 E-{params.D} F{f}
      RESTORE_GCODE_STATE NAME=RETRACT_state MOVE=0
    {% endif %}
  {% endif %}



[gcode_macro SAVE_AT_END]
variable_save: 0
gcode:
  SET_GCODE_VARIABLE MACRO=SAVE_AT_END VARIABLE=save VALUE=1



[gcode_macro SAVE_IF_SET]
gcode:
  {% if printer["gcode_macro SAVE_AT_END"].save == 1 %}
    SAVE_CONFIG
  {% endif %}



[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  TURN_OFF_HEATERS
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  BASE_CANCEL_PRINT

#[bed_screws]
#screw1: 35,31
#screw2: 185,31
#screw3: 185,190
#screw4: 31,190
#screw5: 120,120
#screw6: 150,100



#[bed_mesh]
#mesh_min: 10,10
#mesh_max: 180,180

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.029844, -0.073125, -0.022031, -0.019531
#*# 	-0.039375, -0.050469, -0.000625, 0.004844
#*# 	-0.018438, -0.038750, 0.011406, 0.032656
#*# 	-0.064219, -0.148125, -0.097969, -0.055469
#*# tension = 0.2
#*# min_x = 10.0
#*# algo = lagrange
#*# y_count = 4
#*# mesh_y_pps = 2
#*# min_y = 10.0
#*# x_count = 4
#*# max_y = 209.98
#*# mesh_x_pps = 2
#*# max_x = 175.0
#*#
#*# [bed_mesh name]
#*# version = 1
#*# points =
#*# 	-0.029844, -0.073125, -0.022031, -0.019531
#*# 	-0.039375, -0.050469, -0.000625, 0.004844
#*# 	-0.018438, -0.038750, 0.011406, 0.032656
#*# 	-0.064219, -0.148125, -0.097969, -0.055469
#*# tension = 0.2
#*# min_x = 10.0
#*# algo = lagrange
#*# y_count = 4
#*# mesh_y_pps = 2
#*# min_y = 10.0
#*# x_count = 4
#*# max_y = 209.98
#*# mesh_x_pps = 2
#*# max_x = 175.0
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 19.765
#*# pid_ki = 0.969
#*# pid_kd = 100.801
